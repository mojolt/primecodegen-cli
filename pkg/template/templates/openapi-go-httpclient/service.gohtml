{{- /*gotype: github.com/primelib/primecodegen/pkg/openapi/openapigenerator.APIEachTemplate*/ -}}
{{- template "header-singleline" }}

package {{ .Package }}

import (
    "context"
    "fmt"
)

{{ $serviceName := printf "%sService" (.TagName | pascalCase) }}
{{- if .TagDescription }}
// {{ .TagName | pascalCase }} {{ .TagDescription | commentSingleLine }}
{{ end }}
type {{ $serviceName }} service

{{- range $op := .TagOperations }}
// {{ $op.Name }}{{if $op.Description }} {{ $op.Description | commentSingleLine }}{{ end }}
//
{{- range $doc := $op.Documentation }}
// {{ $doc.Title }}: {{ $doc.URL }}
{{- end }}
//
//meta:operation {{ $op.Method | upperCase }} {{ $op.Path }}
func (s *{{ $serviceName }}) {{ $op.Name | toFunctionName }}(ctx context.Context, owner, repo string, checkRunID int64) (*CheckRun, *Response, error) {
    u := fmt.Sprintf("repos/%v/%v/check-runs/%v", owner, repo, checkRunID)
    req, err := s.client.NewRequest("GET", u, nil)
    if err != nil {
        return nil, nil, err
    }

    req.Header.Set("Accept", mediaTypeCheckRunsPreview)

    checkRun := new(CheckRun)
    resp, err := s.client.Do(ctx, req, checkRun)
    if err != nil {
    return nil, resp, err
    }

    return checkRun, resp, nil
}

{{- end }}
